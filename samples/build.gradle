


buildscript {
    repositories { flatDir name: 'libs', dirs: "../libs" }
    dependencies { classpath 'com.hoddmimes.versionplugin:versionplugin:1.0' }
}

plugins {
    id 'java'
    id "com.diffplug.spotless" version "6.25.0"
}


repositories {
    mavenCentral()
}

apply plugin: 'com.hoddmimes.versionplugin'

def trnsVrs = tasks.transformVersion.version()


spotless {
    java {
        target("**/generated/*.java")
        toggleOffOn()
        googleJavaFormat()
        indentWithSpaces()
        removeUnusedImports()
    }
}


tasks.register('generateTestClasses', JavaExec) {
    mainClass = 'MessageGenerate'
    classpath = project.project(':messageGenerate').sourceSets.main.runtimeClasspath
    args "-xml","./xml/TestMessagesFileSet.xml","-xslDir","../messageGenerate/src/main/resources/"
}



task buildTestJar (type: Jar) {
    dependsOn()
    archiveBaseName = 'msgcodec-tests'
    destinationDirectory = file("../libs/")
    archiveVersion = "$trnsVrs"

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } with jar

    from {
        zipTree("../libs/msgcodec-generate-" + "$trnsVrs" + ".jar")
    } with jar

    from {
        zipTree("../libs/msgcodec-" + "$trnsVrs" + ".jar")
    } with jar

    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"

    duplicatesStrategy = 'exclude'

    manifest {
        attributes 'Implementation-Title': 'MessageCodecTest', 'Implementation-Version': archiveVersion
    }

    from('build/classes') {
        include '**/*.class'
    }

    doLast {
        def testJar ="msgcodec-tests-" + "$trnsVrs" + ".jar"
        print("***** Built JAR $testJar")
    }
}




task deleteGenerated( type: Delete ) {
    def testJar ="../libs/msgcodec-tests-" + "$trnsVrs" + ".jar"
    delete "$testJar"

    delete fileTree('./src/main/java/generated') {
        include '*.java'
    }

    doLast {
        print("***** Delete $testJar and generated test message objects")
    }

}

buildTestJar.dependsOn( 'generateTestClasses', ':samples:compileTestJava',':messageAux:buildMessageAuxJar', ':messageGenerate:buildGenerateJar')

compileJava.dependsOn('generateTestClasses')

classes.finalizedBy(buildTestJar, 'spotlessApply')
clean.dependsOn(deleteGenerated)


dependencies {
    implementation project(':messageAux')
    implementation project(':messageGenerate')
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.6'
    implementation group: 'org.mongodb', name: 'mongo-java-driver', version: '3.8.2'
    implementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}